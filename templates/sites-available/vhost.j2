# {{ ansible_managed }}

{% macro configure_alias(vhost_config) %}
 {% for value in vhost_config.aliases | default([]) %}
  ServerAlias {{ value }}
 {% endfor %}
{% endmacro %}

{% macro configure_mailadmin(vhost_config) %}
 {% if vhost_config.mailadmin is defined %}
  ServerAdmin {{ vhost_config.mailadmin }}
 {% else %}
  ServerAdmin {{ apache_mailadmin }}
 {% endif %}
{% endmacro %}

{% macro configure_logs(vhost_config) %}
 {% if vhost_config.logformat is defined %}
  # --- Logs ------------------------------------------------------------------
  {{ vhost_config.logformat }}
 {% endif %}
  
  # --- Logs ------------------------------------------------------------------
  ErrorLog	{{ apache_logs_directory }}/{{ vhost_config.name }}/error.log
  CustomLog	{{ apache_logs_directory }}/{{ vhost_config.name }}/access.log combined
{% endmacro %}

{% macro configure_letsencrypt(vhost_config) %}
 {% if _apache_vhost.letsencrypt is defined %}
  # --- Directories for letsencrypt challenge ----------------------------------
  Alias /.well-known/acme-challenge/ "{{ apache_certbot_webroot }}/.well-known/acme-challenge/"
  <Directory "{{ apache_certbot_webroot }}">
    AllowOverride None
    Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec
    Require all granted
  </Directory>
  
  # --- SSL -------------------------------------------------------------------
  SSLEngine on

  {% if _apache_vhost.letsencrypt_cert_name is defined %}
  SSLCertificateFile /etc/letsencrypt/live/{{ _apache_vhost.letsencrypt_cert_name }}/cert.pem
  SSLCertificateKeyFile /etc/letsencrypt/live/{{ _apache_vhost.letsencrypt_cert_name }}/privkey.pem
  {% else %}
  SSLCertificateFile /etc/letsencrypt/live/{{ _apache_vhost.name }}/cert.pem
  SSLCertificateKeyFile /etc/letsencrypt/live/{{ _apache_vhost.name }}/privkey.pem
  {% endif %}
 {% endif %}

 {% if not _apache_vhost.letsencrypt | default(false) and _apache_vhost.https %}
  # --- SSL -------------------------------------------------------------------
  SSLEngine on
  {% set _apache_vhost_certificate_is_not_path = _apache_vhost.ssl.crt | regex_search('^.*BEGIN CERTIFICATE.*', multiline=true) %}
  {% set _apache_vhost_key_is_not_path = _apache_vhost.ssl.key | regex_search('^.*BEGIN( RSA)? PRIVATE KEY.*', multiline=true) %}

  SSLCertificateFile {{ apache_default_vhost_ssl_certs_path + '/' + _apache_certificate_file_name + '.crt' if _apache_vhost_certificate_is_not_path else _apache_vhost.ssl.crt }}
  SSLCertificateKeyFile {{ apache_default_vhost_ssl_certs_path + '/' + _apache_certificate_file_name + '.key' if _apache_vhost_key_is_not_path else _apache_vhost.ssl.key }}
  {% if _apache_vhost.ssl.chain is defined %}
  {% set _apache_vhost_chain_is_not_path = _apache_vhost.ssl.chain | regex_search('^.*BEGIN CERTIFICATE.*', multiline=true) %}
  SSLCertificateChainFile {{ apache_default_vhost_ssl_certs_path + '/chain-' + _apache_certificate_file_name + '.crt' if _apache_vhost_chain_is_not_path else _apache_vhost.ssl.chain }}
  {% endif %}
 {% endif %}

{% endmacro %}

{% macro configure_auth(vhost_config) %}
 {% if vhost_config.auth is defined %}
  # --- Auth ------------------------------------------------------------------
  <Directory {{ apache_vhosts_directory }}/{{ vhost_config.name }}/{{ vhost_config.docroot }}>
    AuthType Basic
    AuthBasicProvider file
    AuthUserFile /etc/{{ _apache_package_name }}/htpasswd/{{ vhost_config.auth.file }}
    AuthName "{{ vhost_config.auth.name }}"
    Require valid-user
  </Directory>
 {% endif %}
{% endmacro %}

{% macro configure_php_fpm(vhost_config) %}
 {% if vhost_config.php_fpm is defined %}
  # --- PHP-FPM ---------------------------------------------------------------
  <FilesMatch "\.php$">
    SetHandler "{{ vhost_config.php_fpm_host | default('proxy:fcgi://127.0.0.1:9000') }}"
  </FilesMatch>

  {% if vhost_config.php_fpm_status is defined %}
  <FilesMatch "^ping|status$">
    Require all denied
    Require ip 127.0.0.1
    Require ip 10.1.71.0/24
    Require ip 10.254.0.0/16
    Require ip 10.255.0.0/16
    SetHandler "{{ vhost_config.php_fpm_host | default('proxy:fcgi://127.0.0.1:9000') }}"
  </FilesMatch>
  {% endif %}
 {% endif %}
{% endmacro %}

{% macro configure_proxy(vhost_config) %}
 {% if vhost_config.proxy is defined %}
  # --- Proxy -----------------------------------------------------------
  {% if vhost_config.proxy.url is defined %}
   {% set _apache_balancer_urls = vhost_config.proxy.url | join('_') %}
   {% set _apache_balancer_name = _apache_balancer_urls.replace('http://','').replace(':','').replace('/','') %}
  <Proxy balancer://{{ _apache_balancer_name }}>
   {% for url in vhost_config.proxy.url %}
    BalancerMember {{ url | urlsplit('scheme') }}://{{ url | urlsplit('netloc') }}
   {% endfor %}
    ProxySet {{ vhost_config.proxy.proxy_set | default('lbmethod=bytraffic') }}
  </Proxy>
  ProxyRequests Off
  ProxyPreserveHost On
  ProxyPass {{ vhost_config.proxy.path | default("/") }} "balancer://{{ _apache_balancer_name }}{{ vhost_config.proxy.url[0] | urlsplit('path') }}"
  ProxyPassReverse {{ vhost_config.proxy.path | default("/") }} "balancer://{{ _apache_balancer_name }}{{ vhost_config.proxy.url[0] | urlsplit('path') }}"
  {% endif %}
 {% endif %}
{% endmacro %}

{% macro configure_maintenance(vhost_config) %}
 {% if vhost_config.maintenance.enable is defined and vhost_config.maintenance.enable %}
  # --- Maintenance -----------------------------------------------------------
  {% if vhost_config.maintenance.template.managed is defined and vhost_config.maintenance.template.managed %}
  Alias "/maintenance/index.html" "{{ apache_vhosts_directory }}/maintenance/{{ vhost_config.name }}.html"
  <Location "/maintenance/index.html">
    Require all granted
  </Location>
  {% endif %}

  <IfModule mod_rewrite.c>
    RewriteEngine On
    # Disable maintenance for those ips
   {% for ip in vhost_config.maintenance.whitelist | default(apache_default_maintenance_whitelist) %}
    RewriteCond expr "! -R '{{ ip }}'"
   {% endfor %}

    # Make sure the /maintenance/index.html page exists.
    RewriteCond %{DOCUMENT_ROOT}/maintenance/index.html -f

    # Check if maintenance.enable exist
    RewriteCond %{DOCUMENT_ROOT}/maintenance.enable -f

    # Disable Rewrite for maintenance page and associated media
    RewriteCond %{REQUEST_URI} !^/maintenance/

    # Redirect all traffic to maintenance page
    RewriteRule ^.*$ /maintenance/index.html [R=503,L]
    ErrorDocument 503 /maintenance/index.html
  </IfModule>
  <IfModule mod_expires.c>
    ExpiresActive On
    ExpiresDefault "access plus 10 minutes"
  </IfModule>
  <IfModule mod_headers.c>
    Header Set Cache-Control "no-cache, private, max-age=0, no-store"
  </IfModule>
 {% endif %}
{% endmacro %}

{% macro configure_custom_config(vhost_config) %}
 {% if vhost_config.custom_options is defined %}
  # Custom
  {% for custom_options_name, custom_options_lines in vhost_config.custom_options.items() %}
    {%- for value in custom_options_lines %}
      {{ custom_options_name }} {{ value }}
    {% endfor %}
  {% endfor %}
 {% endif %}
{% endmacro %}

{% macro configure_extra_parameters(vhost_config) %}
 {% if vhost_config.extra_parameters is defined %}
  {{ vhost_config.extra_parameters }}
 {% endif %}
{% endmacro %}

{% if (_apache_vhost.http is defined) or (_apache_vhost.https_redir) or (_apache_vhost.port is defined and _apache_vhost.port | string == "80") %}
 <VirtualHost {{ _apache_vhost.ip | default(apache_default_vhost_ip) }}:{{ _apache_vhost.port | default(apache_default_vhost_http_port) }}>

       # --- Parameters ------------------------------------------------------------
       ServerName {{ _apache_vhost.name }}
    {{ configure_alias(_apache_vhost) }}
    {{ configure_mailadmin(_apache_vhost) }}

 {% if _apache_vhost.https_redir %}
       # --- Redirection -----------------------------------------------------------
       RewriteEngine On
       RewriteRule (.*) https://%{SERVER_NAME}$1 [R,L]
  
 {% else %}
       # ---- Apply config if not https_redir --------------------------------------
    
       DocumentRoot "{{ apache_vhosts_directory }}/{{ _apache_vhost.name }}/{{ _apache_vhost.docroot }}"
    {{ configure_logs(_apache_vhost) }}

       # --- Directories -----------------------------------------------------------
       <Directory {{ apache_vhosts_directory }}/{{ _apache_vhost.name }}/{{ _apache_vhost.docroot }}>
          Options FollowSymLinks
          AllowOverride all
          Require all granted
       </Directory>

    {{ configure_letsencrypt(_apache_vhost) }}
    {{ configure_auth(_apache_vhost) }}
    {{ configure_php_fpm(_apache_vhost) }}
    {{ configure_proxy(_apache_vhost) }}
    {{ configure_maintenance(_apache_vhost) }}
    {{ configure_custom_config(_apache_vhost) }}
    {{ configure_extra_parameters(_apache_vhost) }}
 {% endif %}
 </VirtualHost>
{% endif %}

{% if (_apache_vhost.https) or  ((_apache_vhost.port is defined ) and _apache_vhost.port | string == "443") %}
 <VirtualHost {{ _apache_vhost.ip | default(apache_default_vhost_ip) }}:{{ _apache_vhost.port | default(apache_default_vhost_ssl_port) }}>
       # --- Parameters ------------------------------------------------------------
       ServerName {{ _apache_vhost.name }}
    {{ configure_alias(_apache_vhost) }}
    {{ configure_mailadmin(_apache_vhost) }}
    
    DocumentRoot "{{ apache_vhosts_directory }}/{{ _apache_vhost.name }}/{{ _apache_vhost.docroot }}"

    {{ configure_logs(_apache_vhost) }}

    # --- Directories -----------------------------------------------------------
    <Directory {{ apache_vhosts_directory }}/{{ _apache_vhost.name }}/{{ _apache_vhost.docroot }}>
      Options FollowSymLinks
      AllowOverride all
      Require all granted
    </Directory>

    {{ configure_letsencrypt(_apache_vhost) }}
    {{ configure_auth(_apache_vhost) }}
    {{ configure_php_fpm(_apache_vhost) }}
    {{ configure_proxy(_apache_vhost) }}
    {{ configure_maintenance(_apache_vhost) }}
    {{ configure_custom_config(_apache_vhost) }}
    {{ configure_extra_parameters(_apache_vhost) }}
 </VirtualHost>
{% endif %}
